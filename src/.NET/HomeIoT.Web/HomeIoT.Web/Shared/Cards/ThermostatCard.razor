@namespace HomeIoT.Web.Shared
@inject IHttpClientFactory httpClientFactory

<DefaultCard Title="Set thermostat temperature" Header=@Header Image="images/thermostat.jpg">
    <div class="input-group mb-3">
        <span class="input-group-text" id="basic-addon1">°C</span>
        <input type="number" class="form-control" @bind="InputValue" placeholder="Temperature">
        <button type="button" @onclick="async () =>{ await OnSubmit(); }" class="btn btn btn-outline-success" style="min-width: 5rem;">✔</button>
    </div>  
    <div class="btn-group text-center" role="group" style="min-width: 100%;">
        <button type="button" class="btn btn-outline-primary"  @onclick="() =>{ InputValue--; }">-</button>
        <button type="button" class="btn btn-outline-primary"  @onclick="() =>{ InputValue++; }">+</button>
    </div>
</DefaultCard>

@code 
{
    [Parameter]
    public ThermostatSettingsDto ThermostatSettingsDto { get; set; } = null!;
    private float InputValue { get; set; }

    private string Header => $"Current thermostat setting is {ThermostatSettingsDto.ThermostatValue} °C";

    private async Task OnSubmit()
    {
        var client = httpClientFactory.CreateClient("gateway");

        var setThermostatRequest = new SetThermostatRequest(ThermostatSettingsDto with { ThermostatValue = InputValue });
        await client.PostAsJsonAsync($"api/thermostats", setThermostatRequest);
    }

    protected override async Task OnInitializedAsync()
    {
        InputValue = ThermostatSettingsDto.ThermostatValue;
    }
}