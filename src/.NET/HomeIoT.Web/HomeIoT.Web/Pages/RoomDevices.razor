@page "/room-devices/{RoomGuid}"
@using HomeIoT.Web.Services;
@using HomeIoT.Web.Services.RoomDevicesService;
@using HomeIoT.Web.Shared.Component;
@using HomeIoT.Web.Services.DevicesDataProviders;
@inject RoomDevicesProviderService roomDevicesProvider

<PageTitle>@Header</PageTitle>

<h1>@Header IoT</h1>

@if (components == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="d-flex flex-wrap gap-3">
        @foreach (var component in components)
        {
            <DynamicComponent Type="@component.Type"
                              Parameters="@component.Parameters" />
        }

    </div>
}

@code {
    private string Header { get; set; } = "Living Room";

    [Parameter]
    public string RoomGuid { get; set; }

    private List<CardMetadata> components;

    private Timer timer;

    protected override async Task OnInitializedAsync()
    {
        timer = new Timer(
            e =>
            {
                InvokeAsync(async () => 
                {
                    components = await roomDevicesProvider.GetRoomDevices(new Guid(RoomGuid));
                    StateHasChanged();
                });
            },
            null,
            TimeSpan.Zero,
            TimeSpan.FromSeconds(2)
        );
    }
}
